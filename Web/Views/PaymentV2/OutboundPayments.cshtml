@using Aiia.Sample.Models.Aiia
@model Aiia.Sample.Models.PaymentsViewModel
@{
    ViewBag.Title = "Payments";
    Layout = "_Layout";
}

<section class="jumbotron text-center">
    <div class="row justify-content-md-center">

        <ul class="nav nav-pills mb-4">
            <li class="nav-item">
                <a class="nav-link"
                   role="button"
                   href="@Url.Action("CreateOutboundPayment", "PaymentV2")"
                   id="create-payment-button"
                   style="cursor: pointer;">
                    Create outbound Payment V2
                </a>
            </li>
        </ul>
    </div>
</section>
<div class="row">

    <div class="col">
        @if (Model?.PaymentsGroupedByAccountDisplayName == null || !Model.PaymentsGroupedByAccountDisplayName.Any())
        {
            <p class="text-center">
                There are no payments made through Aiia for connected accounts. Try @Html.ActionLink("creating a payment", "CreateOutboundPayment", "PaymentV2", null, null)
            </p>
        }
        else
        {
            foreach (var group in Model.PaymentsGroupedByAccountDisplayName)
            {
                <div class="card mb-3">
                    <div class="card-header">
                        Account: @group.Key.Name
                    </div>
                    <div class="card-body" id="payments-@group.Key.Id">
                        @foreach (var payment in Model.PaymentsGroupedByAccountDisplayName[group.Key])
                        {
                        <div>
                            @if (payment.Status.PaymentStatusCode == "Created")
                            {
                                <input type="checkbox" value="@payment.Id" onchange="toggleSubmitEnabled('@group.Key.Id')" />
                            }

                            <span class="mt-3">@payment.Id</span>
                            <span class="bg-light mb-2 w-100"
                                  onclick="window.location.href = '@Url.Action("PaymentDetails", "PaymentV2", new {accountId = group.Key.Id, paymentId = payment.Id})'">

                                <span id="payments" class="media-body ml-3" style="cursor: pointer">

                                    <span>@(payment.Status?.PaymentStatusCode ?? "Unknown Status")</span>
                                    @if (payment?.Execution?.Amount != null)
                                    {
                                        <span>
                                            <small>@payment.Execution.Amount.Value @group.Key.Booked.Currency</small>
                                        </span>
                                    }
                                </span>
                            </span>
                        </div>
                        }
                        @if (Model.PaymentsGroupedByAccountDisplayName[group.Key].Count > 0)
                        {
                            <button id="create-authorization-@group.Key.Id" disabled class="btn btn-primary" style="margin-top: 1rem; white-space: normal; width: 100%;" onclick="createPaymentAuthorization('@group.Key.Id')">Create payment authorization</button>
                        }
                    </div>
                </div>
            }
        }
    </div>
</div>

@section Scripts
{
    <script>
        function toggleSubmitEnabled(accountId) {
            var selected = getSelectedPayments(accountId);
            $('#create-authorization-' + accountId).prop('disabled', selected.length === 0);
        }

        function getSelectedPayments(accountId) {
            var paymentsSelector = '#payments-' + accountId;
            var selected = [];
            $(paymentsSelector + ' input:checked').each(function() {
                selected.push($(this).val());
            });
            return selected;
        }

        function createPaymentAuthorization(accountId) {
            var selected = getSelectedPayments(accountId);

            const body = {
                paymentIds: selected,
                sourceAccountId: accountId
            };

            $.ajax({
                url: '/v2/aiia/payment-authorizations/create',
                type: 'POST',
                dataType: 'json',
                contentType: 'application/json',
                data: JSON.stringify(body),
                success: function(data) {
                    if (data.errorDescription) {
                        alert(`Failed:\n${data.errorDescription}`);
                    } else if (data.authorizationUrl) {
                        window.location.href = data.authorizationUrl;
                    } else {
                        alert(`Success! Payment Authorization Id: ${data.authorizationId}`);
                    }
                },
                error: function(data) {
                    alert('Request failed');
                }
            });
        }
    </script>
}